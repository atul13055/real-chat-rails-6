{"ast":null,"code":"import consumer from \"./consumer\";\ndocument.addEventListener('turbolinks:load', function () {\n  var room_element = document.getElementById('room-id');\n  var room_id = room_element.getAttribute('data-room-id');\n  console.log(consumer.subscriptions);\n  consumer.subscriptions.subscriptions.forEach(function (subscription) {\n    consumer.subscriptions.remove(subscription);\n  });\n  consumer.subscriptions.create({\n    channel: \"RoomChannel\",\n    room_id: room_id\n  }, {\n    connected: function connected() {\n      console.log(\"connected to \" + room_id);\n      // Called when the subscription is ready for use on the server\n    },\n    disconnected: function disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n    received: function received(data) {\n      var user_element = document.getElementById('user-id');\n      var user_id = Number(user_element.getAttribute('data-user-id'));\n      var html;\n      if (user_id === data.message.user_id) {\n        html = data.mine;\n      } else {\n        html = data.theirs;\n      }\n      var messageContainer = document.getElementById('messages');\n      messageContainer.innerHTML = messageContainer.innerHTML + html;\n    }\n  });\n});","map":{"version":3,"names":["consumer","document","addEventListener","room_element","getElementById","room_id","getAttribute","console","log","subscriptions","forEach","subscription","remove","create","channel","connected","disconnected","received","data","user_element","user_id","Number","html","message","mine","theirs","messageContainer","innerHTML"],"sources":["/home/atulyadav/Desktop/messenger-app-master/app/javascript/channels/room_channel.js"],"sourcesContent":["import consumer from \"./consumer\"\n\ndocument.addEventListener('turbolinks:load', () => {\n  const room_element = document.getElementById('room-id');\n  const room_id = room_element.getAttribute('data-room-id');\n\n  console.log(consumer.subscriptions)\n\n  consumer.subscriptions.subscriptions.forEach((subscription) => {\n    consumer.subscriptions.remove(subscription)\n  })\n\n  consumer.subscriptions.create({ channel: \"RoomChannel\", room_id: room_id }, {\n    connected() {\n      console.log(\"connected to \" + room_id)\n      // Called when the subscription is ready for use on the server\n    },\n\n    disconnected() {\n      // Called when the subscription has been terminated by the server\n    },\n\n    received(data) {\n      const user_element = document.getElementById('user-id');\n      const user_id = Number(user_element.getAttribute('data-user-id'));\n\n      let html;\n\n      if (user_id === data.message.user_id) {\n        html = data.mine\n      } else {\n        html = data.theirs\n      }\n\n      const messageContainer = document.getElementById('messages')\n      messageContainer.innerHTML = messageContainer.innerHTML + html\n    }\n  });\n})\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,YAAY;AAEjCC,QAAQ,CAACC,gBAAgB,CAAC,iBAAiB,EAAE,YAAM;EACjD,IAAMC,YAAY,GAAGF,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC;EACvD,IAAMC,OAAO,GAAGF,YAAY,CAACG,YAAY,CAAC,cAAc,CAAC;EAEzDC,OAAO,CAACC,GAAG,CAACR,QAAQ,CAACS,aAAa,CAAC;EAEnCT,QAAQ,CAACS,aAAa,CAACA,aAAa,CAACC,OAAO,CAAC,UAACC,YAAY,EAAK;IAC7DX,QAAQ,CAACS,aAAa,CAACG,MAAM,CAACD,YAAY,CAAC;EAC7C,CAAC,CAAC;EAEFX,QAAQ,CAACS,aAAa,CAACI,MAAM,CAAC;IAAEC,OAAO,EAAE,aAAa;IAAET,OAAO,EAAEA;EAAQ,CAAC,EAAE;IAC1EU,SAAS,uBAAG;MACVR,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGH,OAAO,CAAC;MACtC;IACF,CAAC;IAEDW,YAAY,0BAAG;MACb;IAAA,CACD;IAEDC,QAAQ,oBAACC,IAAI,EAAE;MACb,IAAMC,YAAY,GAAGlB,QAAQ,CAACG,cAAc,CAAC,SAAS,CAAC;MACvD,IAAMgB,OAAO,GAAGC,MAAM,CAACF,YAAY,CAACb,YAAY,CAAC,cAAc,CAAC,CAAC;MAEjE,IAAIgB,IAAI;MAER,IAAIF,OAAO,KAAKF,IAAI,CAACK,OAAO,CAACH,OAAO,EAAE;QACpCE,IAAI,GAAGJ,IAAI,CAACM,IAAI;MAClB,CAAC,MAAM;QACLF,IAAI,GAAGJ,IAAI,CAACO,MAAM;MACpB;MAEA,IAAMC,gBAAgB,GAAGzB,QAAQ,CAACG,cAAc,CAAC,UAAU,CAAC;MAC5DsB,gBAAgB,CAACC,SAAS,GAAGD,gBAAgB,CAACC,SAAS,GAAGL,IAAI;IAChE;EACF,CAAC,CAAC;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}